{"version":3,"sources":["Components/FloatingInfo/FloatingInfo.js","Components/Paginations.js","Components/MovieTable.js","Components/Search.js","App.js","index.js"],"names":["FloatingInfo","props","onClick","movieInfo","changeMovieInfo","className","e","stopPropagation","Title","src","Poster","Writer","Genre","Language","Actors","Released","Country","imdbRating","Pagination","totalPage","Math","ceil","movieList","length","changePage","i","pageinfo","changeCurPage","list","curPage","push","getPage","MovieTable","useState","style","cursor","sortOption","changeSortOption","indexStart","curPageInfo","indexEnd","slice","map","x","Year","BoxOffice","getAllList","Search","color","border","padding","value","filterObj","filtering","filterValue","onChange","changeFiltering","oldstate","target","searchValue","toLowerCase","type","placeholder","App","useEffect","movieList2","filter","str","startsWith","sort","a","b","localeCompare","replace","position","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5c85aff2.chunk.js","sourcesContent":["import './FloatingInfo.css'\nconst FloatingInfo = (props)=>{\n    return (\n        <div onClick={()=>props.movieInfo.changeMovieInfo(null)} className=\"FloatingWrapper\">\n            <div onClick={(e)=>{e.stopPropagation()}} className=\"FloatingBox\">\n                <div>\n                    <h3>{props.movieInfo.movieInfo.Title}</h3>\n                    <div className=\"floating_imagebox\">\n                        <img className=\"responsive-img\" src={props.movieInfo.movieInfo.Poster}></img>\n                    </div>\n                    <ul className=\"collection\">\n                        <li className=\"collection-item\">Director : {props.movieInfo.movieInfo.Title}</li>\n                        <li className=\"collection-item\">Writer : {props.movieInfo.movieInfo.Writer} </li>\n                        <li className=\"collection-item\">Genre : {props.movieInfo.movieInfo.Genre}</li>\n                        <li className=\"collection-item\">Language : {props.movieInfo.movieInfo.Language}</li>\n                        <li className=\"collection-item\">Actors : {props.movieInfo.movieInfo.Actors}</li>\n                        <li className=\"collection-item\">Released Date : {props.movieInfo.movieInfo.Released}</li>\n                        <li className=\"collection-item\">Country : {props.movieInfo.movieInfo.Country}</li>\n                        <li className=\"collection-item\">IMDBRating : {props.movieInfo.movieInfo.imdbRating}</li>\n                    </ul>\n                </div>\n            </div>  \n        </div>\n    )\n}\nexport default FloatingInfo;","import { useState } from \"react\";\n\nconst Pagination = (props)=>{\n    let totalPage = Math.ceil(props.movieList.length / 10);\n    let changePage = (i)=>{\n        props.pageinfo.changeCurPage(i);\n    }\n    let getPage = ()=>{\n        let list = [];\n        for(let i=1;i<=totalPage;i++){\n            if(i === props.pageinfo.curPage){\n                list.push(<li key={i} onClick={()=>changePage(i)} className=\"active waves-effect\"><a>{i}</a></li>);\n            }else{\n                list.push(<li key={i} onClick={()=>changePage(i)} className=\"waves-effect\"><a>{i}</a></li>);\n            }\n        }\n        return list;\n    }\n    \n\n    return (\n        <ul className=\"pagination\">\n            {getPage()}\n        </ul>\n    )\n}\nexport default Pagination;","import { useState } from \"react\";\nimport FloatingInfo from \"./FloatingInfo/FloatingInfo\";\nimport Pagination from \"./Paginations\"\n\nconst MovieTable = (props)=>{\n    let [movieInfo,changeMovieInfo] = useState(null);\n    let getAllList = ()=>{\n        let indexStart = ((props.curPageInfo.curPage-1) * 10);\n        let indexEnd = (props.curPageInfo.curPage * 10);\n        let realMovieList = props.movieList.slice(indexStart,indexEnd);\n        return realMovieList.map((x,i)=>{\n            return (\n                <tr onClick={()=>{changeMovieInfo(x)}} key={i}>\n                    <td>{x.Title}</td>\n                    <td>{x.Year}</td>\n                    <td>{x.BoxOffice}</td>\n                    <td>{x.imdbRating}</td>\n                </tr>\n            )\n        })\n    }\n    return (\n        <div>\n            <table className=\"striped centered responsive-table\">\n            <thead>\n                <tr>\n                    <th style={{cursor:'pointer'}} onClick={()=>{props.sortOption.changeSortOption(\"Title\")}}>Title</th>\n                    <th style={{cursor:'pointer'}} onClick={()=>{props.sortOption.changeSortOption(\"Year\")}}>Year</th>\n                    <th style={{cursor:'pointer'}} onClick={()=>{props.sortOption.changeSortOption(\"BoxOffice\")}}>BoxOffice</th>\n                    <th style={{cursor:'pointer'}} onClick={()=>{props.sortOption.changeSortOption(\"imdbRating\")}}>Imdb Rating</th>\n                </tr>\n            </thead>\n                <tbody>\n                    {getAllList()}\n                </tbody>\n            </table>\n            <Pagination pageinfo={props.curPageInfo} movieList={props.movieList}></Pagination>     \n            {movieInfo?<FloatingInfo movieInfo={{movieInfo,changeMovieInfo}}></FloatingInfo>:null}\n            \n      </div>\n    )\n}\nexport default MovieTable;","const Search = (props)=>{\n\n\n    let filterOnChange = (e)=>{\n        props.filterObj.changeFiltering(oldstate=>{\n            return {\n                ...oldstate,\n                filterValue : e.target.value,\n                searchValue : \"\"\n            }\n        });\n    }\n    let searchOnChange = (e)=>{\n        props.filterObj.changeFiltering(oldstate=>{\n            return {\n                ...oldstate,\n                searchValue : e.target.value.toLowerCase()\n            }\n        });\n    }\n    \n    return (\n        <div style={{color:\"#26A69A\", border:\"1px solid #26A69A\", padding:\"20px\"}}>\n            <h5>SearchBox</h5>\n            <select value={props.filterObj.filtering.filterValue} onChange={filterOnChange} className=\"browser-default\">\n                <option value=\"\">Choose your option</option>\n                <option value=\"Title\">Title</option>\n                <option value=\"Year\">Year</option>\n                <option value=\"BoxOffice\">BoxOffice</option>\n                <option value=\"imdbRating\">Imdb Rating</option>\n            </select>\n            <input value={props.filterObj.filtering.searchValue} onChange={searchOnChange} type=\"text\" placeholder=\"Search here\"></input>\n        </div>\n        )\n}\nexport default Search;","import { useEffect, useState } from 'react';\nimport movieList from './Assets/data.json'\nimport MovieTable from './Components/MovieTable';\nimport Search from './Components/Search';\nconst App = (props)=>{\n    let searchOption = {\n        filterValue : \"\",\n        searchValue : \"\"\n    }\n    let [filtering,changeFiltering] = useState(searchOption);\n    let [sortOption,changeSortOption] = useState(\"\");\n    let [curPage,changeCurPage] = useState(1);\n\n    useEffect(()=>{\n        changeCurPage(1);\n    },[filtering,sortOption]);\n\n    let filterMovieList = ()=>{\n        if(filtering.filterValue && filtering.searchValue){\n            return movieList.filter(x=>{\n                let str = x[filtering.filterValue];\n                if(!str){\n                    return false;\n                }\n                str = str.toLowerCase();\n                return str.startsWith(filtering.searchValue);\n            })\n        }\n        return movieList;\n    }\n    let movieList2 = filterMovieList();\n    if(sortOption){\n        movieList2.sort((a,b)=>{\n            if(sortOption === 'Title'){\n                return a.Title.localeCompare(b.Title);\n            }\n            if(sortOption === 'Year'){\n                return b.Year - a.Year;\n            }\n            if(sortOption ==='imdbRating'){\n                return b.imdbRating - a.imdbRating;\n            }\n            if(sortOption === 'BoxOffice'){\n                if(!a.BoxOffice){\n                    return 1;\n                }\n                if(!b.BoxOffice){\n                    return -1;\n                }\n                a = a.BoxOffice.replace(/\\D/g,'');\n                b = b.BoxOffice.replace(/\\D/g,'');\n                return b-a;\n            }\n        })\n    }\n    \n    return (\n        <div style={{position:\"relative\"}} className=\"container\">\n            <h3>MovieList</h3>\n            <Search filterObj={{filtering,changeFiltering}}></Search>\n            <MovieTable curPageInfo={{curPage,changeCurPage}} sortOption={{sortOption,changeSortOption}} movieList={movieList2}></MovieTable>\n        </div>\n    )\n}\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App></App>,document.querySelector(\"#root\"));"],"sourceRoot":""}